<<<<<<< HEAD
/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.3*/
!function(n,e){if("function"==typeof define&&define.amd)define("mongofilter",["exports","module"],e);else if("undefined"!=typeof exports&&"undefined"!=typeof module)e(exports,module);else{var t={exports:{}};e(t.exports,t),n.mongofilter=t.exports}}(this,function(n,e){"use strict";function t(n,e,t,r){var i=[];return Array.isArray(e)?e.forEach(function(e,t){return i.push(new o(e,t,r).filterItem(n))}):Object.keys(e).forEach(function(t){return i.push(new o(e[t],t,r).filterItem(n))}),i="OR"===t?!!~i.indexOf(!0):"NOR"===t?!~i.indexOf(!0):!~i.indexOf(!1)}function r(n,e,t){var r=!0;return r=(typeof e).match(/string|number|boolean/)?a["="](n[t],e):e instanceof Array?a.IN(n[t],e):new o(e,"AND",t).filterItem(n)}function i(n,e,i,o){return i in a?a[i](n[o],e):"AND"===i||"NOR"===i||"OR"===i?t(n,e,i,o):r(n,e,i)}function o(n){var e=void 0===arguments[1]?"AND":arguments[1],t=void 0===arguments[2]?null:arguments[2];s[e]&&(e=s[e]),this.filterItem=function(r){if("string"==typeof r)try{r=JSON.parse(r)}catch(o){return!1}return i(r,n,e,t)}}function f(n){if("string"==typeof n&&(n=JSON.parse(n)),!n)throw"Invalid clause";var e=new o(n),t=function(n){return e.filterItem(n)};return t.filter=e.filterCollection,t.filterItem=e.filterItem,t}e.exports=f;var u=/(^|[^%])%(?!%)/g,c=/(^|[^\\])(_+)/g,l=function(n,e,t){return e+new Array(t.length+1).join(".")},a={">":function(n,e){return n>e},">=":function(n,e){return n>=e},"<":function(n,e){return e>n},"<=":function(n,e){return e>=n},"=":function(n,e){return n===e},"!=":function(n,e){return n!==e},REGEX:function(n,e){return void 0===n?!1:("string"==typeof e&&!function(){var n=void 0,t=void 0;e.replace(/^\/([\s\S]*)\/([igm])?/,function(e,r,i){t=r,n=i}),t||(t=e),e=n?new RegExp(t,n):new RegExp(t)}(),!!n.match(e))},LIKE:function(n,e){var t=new RegExp("^"+e.replace(u,"$1.*").replace(c,l)+"$");return!(!n&&0!==n||!n.toString().match(t))},UNLIKE:function(n,e){return!a.LIKE(n,e)},IN:function(n,e){return!!~e.indexOf(n)},NOTIN:function(n,e){return!~e.indexOf(n)}},s={$gt:">",$gte:">=",$lt:"<",$lte:"<=",$or:"OR","||":"OR",$nor:"NOR",$and:"AND","&&":"AND",$e:"=",$eq:"=","<>":"!=",$ne:"!=","!e":"!=",$in:"IN","!in":"NOTIN",$nin:"NOTIN","NOT IN":"NOTIN",$regex:"REGEX",$like:"LIKE",$nlike:"UNLIKE","!like":"UNLIKE","NOT LIKE":"UNLIKE"};o.prototype.filterCollection=function(n){return n?n.filter(this.filterItem):[]},f.comparators=a});
||||||| merged common ancestors
/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.1*/
!function(n,e){if("function"==typeof define&&define.amd)define(["exports","module"],e);else if("undefined"!=typeof exports&&"undefined"!=typeof module)e(exports,module);else{var t={exports:{}};e(t.exports,t),n.mongofilter=t.exports}}(this,function(n,e){"use strict";function t(n,e,t,r){var i=[];return Array.isArray(e)?e.forEach(function(e,t){return i.push(new o(e,t,r).filterItem(n))}):Object.keys(e).forEach(function(t){return i.push(new o(e[t],t,r).filterItem(n))}),i="OR"===t?!!~i.indexOf(!0):"NOR"===t?!~i.indexOf(!0):!~i.indexOf(!1)}function r(n,e,t){var r=!0;return r=(typeof e).match(/string|number|boolean/)?a["="](n[t],e):e instanceof Array?a.IN(n[t],e):new o(e,"AND",t).filterItem(n)}function i(n,e,i,o){return i in a?a[i](n[o],e):"AND"===i||"NOR"===i||"OR"===i?t(n,e,i,o):r(n,e,i)}function o(n){var e=void 0===arguments[1]?"AND":arguments[1],t=void 0===arguments[2]?null:arguments[2];s[e]&&(e=s[e]),this.filterItem=function(r){if("string"==typeof r)try{r=JSON.parse(r)}catch(o){return!1}return i(r,n,e,t)}}function f(n){if("string"==typeof n&&(n=JSON.parse(n)),!n)throw"Invalid clause";var e=new o(n),t=function(n){return e.filterItem(n)};return t.filter=e.filterCollection,t.filterItem=e.filterItem,t}e.exports=f;var u=/(^|[^%])%(?!%)/g,c=/(^|[^\\])(_+)/g,l=function(n,e,t){return e+new Array(t.length+1).join(".")},a={">":function(n,e){return n>e},">=":function(n,e){return n>=e},"<":function(n,e){return e>n},"<=":function(n,e){return e>=n},"=":function(n,e){return n===e},"!=":function(n,e){return n!==e},REGEX:function(n,e){return"string"==typeof e&&!function(){var n=void 0,t=void 0;e.replace(/^\/([\s\S]*)\/([igm])?/,function(e,r,i){t=r,n=i}),t||(t=e),e=n?new RegExp(t,n):new RegExp(t)}(),!!n.match(e)},LIKE:function(n,e){var t=new RegExp("^"+e.replace(u,"$1.*").replace(c,l)+"$");return!(!n&&0!==n||!n.toString().match(t))},UNLIKE:function(n,e){return!a.LIKE(n,e)},IN:function(n,e){return!!~e.indexOf(n)},NOTIN:function(n,e){return!~e.indexOf(n)}},s={$gt:">",$gte:">=",$lt:"<",$lte:"<=",$or:"OR","||":"OR",$nor:"NOR",$and:"AND","&&":"AND",$e:"=",$eq:"=","<>":"!=",$ne:"!=","!e":"!=",$in:"IN","!in":"NOTIN",$nin:"NOTIN","NOT IN":"NOTIN",$regex:"REGEX",$like:"LIKE",$nlike:"UNLIKE","!like":"UNLIKE","NOT LIKE":"UNLIKE"};o.prototype.filterCollection=function(n){return n?n.filter(this.filterItem):[]},f.comparators=a});
=======
/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.1*/
!function(n,e){if("function"==typeof define&&define.amd)define(["exports","module"],e);else if("undefined"!=typeof exports&&"undefined"!=typeof module)e(exports,module);else{var r={exports:{}};e(r.exports,r),n.mongofilter=r.exports}}(this,function(n,e){"use strict";function r(n,e,r,t){var u=Array.isArray(e)?e[g[r]](function(e,r){return i(e,r,t)(n)}):Object.keys(e)[g[r]](function(r){return i(e[r],r,t)(n)});return"$nor"===r?!u:u}function t(n,e,r){return l(e)?d.$eq(n[r],e):Array.isArray(e)?d.$in(n[r],e):i(e,"$and",r)(n)}function i(n,e,i){var u=void 0===arguments[1]?"$and":arguments[1];return function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(o){return!1}return u=y[u]||u,u in g?r(e,n,u,i):u in d?d[u](e[i],n):t(e,n,u)}}function u(n){if("string"==typeof n&&(n=JSON.parse(n)),!n||l(n))throw new TypeError("Invalid query");var e=i(n);return e.filter=function(n){return n&&n.filter?n.filter(e):[]},e}e.exports=u;var o=/(^|[^%])%(?!%)/g,f=/(^|[^\\])(_+)/g,c=function(n,e,r){return e+new Array(r.length+1).join(".")},s=function(n){return new RegExp("^"+n.replace(o,"$1.*").replace(f,c)+"$")},a=/^\/([\s\S]*)\/([igm]*)$/,$=function(n){return"string"==typeof n&&!function(){var e=void 0;n.replace(a,function(r,t,i){n=t,e=i}),n=e?new RegExp(n,e):new RegExp(n)}(),n},p=/^(string|number|boolean)$/,l=function(n){return null==n||p.test(typeof n)},d={$gt:function(n,e){return n>e},$gte:function(n,e){return n>=e},$lt:function(n,e){return e>n},$lte:function(n,e){return e>=n},$eq:function(n,e){return n===e},$neq:function(n,e){return n!==e},$regex:function(n,e){return $(e).test(n)},$like:function(n,e){return s(e).test(n)},$nlike:function(n,e){return!s(e).test(n)},$in:function(n,e){return!!~e.indexOf(n)},$nin:function(n,e){return!~e.indexOf(n)}},g={$or:"some",$nor:"some",$and:"every"},y={$e:"$eq",$ne:"$neq"};u.alias=y,u.comparators=d});
>>>>>>> only keep mongo notation for comparators & logical operators + various improvements
