<<<<<<< HEAD
/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.3*/
System.register("mongofilter",[],function(n){"use strict";function t(n,t,e,r){var u=[];return Array.isArray(t)?t.forEach(function(t,e){return u.push(new i(t,e,r).filterItem(n))}):Object.keys(t).forEach(function(e){return u.push(new i(t[e],e,r).filterItem(n))}),u="OR"===e?!!~u.indexOf(!0):"NOR"===e?!~u.indexOf(!0):!~u.indexOf(!1)}function e(n,t,e){var r=!0;return r=(typeof t).match(/string|number|boolean/)?a["="](n[e],t):t instanceof Array?a.IN(n[e],t):new i(t,"AND",e).filterItem(n)}function r(n,r,i,u){return i in a?a[i](n[u],r):"AND"===i||"NOR"===i||"OR"===i?t(n,r,i,u):e(n,r,i)}function i(n){var t=void 0===arguments[1]?"AND":arguments[1],e=void 0===arguments[2]?null:arguments[2];l[t]&&(t=l[t]),this.filterItem=function(i){if("string"==typeof i)try{i=JSON.parse(i)}catch(u){return!1}return r(i,n,t,e)}}function u(n){if("string"==typeof n&&(n=JSON.parse(n)),!n)throw"Invalid clause";var t=new i(n),e=function(n){return t.filterItem(n)};return e.filter=t.filterCollection,e.filterItem=t.filterItem,e}var o,f,c,a,l;return n("default",u),{setters:[],execute:function(){o=/(^|[^%])%(?!%)/g,f=/(^|[^\\])(_+)/g,c=function(n,t,e){return t+new Array(e.length+1).join(".")},a={">":function(n,t){return n>t},">=":function(n,t){return n>=t},"<":function(n,t){return t>n},"<=":function(n,t){return t>=n},"=":function(n,t){return n===t},"!=":function(n,t){return n!==t},REGEX:function(n,t){return void 0===n?!1:("string"==typeof t&&!function(){var n=void 0,e=void 0;t.replace(/^\/([\s\S]*)\/([igm])?/,function(t,r,i){e=r,n=i}),e||(e=t),t=n?new RegExp(e,n):new RegExp(e)}(),!!n.match(t))},LIKE:function(n,t){var e=new RegExp("^"+t.replace(o,"$1.*").replace(f,c)+"$");return!(!n&&0!==n||!n.toString().match(e))},UNLIKE:function(n,t){return!a.LIKE(n,t)},IN:function(n,t){return!!~t.indexOf(n)},NOTIN:function(n,t){return!~t.indexOf(n)}},l={$gt:">",$gte:">=",$lt:"<",$lte:"<=",$or:"OR","||":"OR",$nor:"NOR",$and:"AND","&&":"AND",$e:"=",$eq:"=","<>":"!=",$ne:"!=","!e":"!=",$in:"IN","!in":"NOTIN",$nin:"NOTIN","NOT IN":"NOTIN",$regex:"REGEX",$like:"LIKE",$nlike:"UNLIKE","!like":"UNLIKE","NOT LIKE":"UNLIKE"},i.prototype.filterCollection=function(n){return n?n.filter(this.filterItem):[]},u.comparators=a}}});
||||||| merged common ancestors
/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.1*/
System.register([],function(n){"use strict";function t(n,t,e,r){var u=[];return Array.isArray(t)?t.forEach(function(t,e){return u.push(new i(t,e,r).filterItem(n))}):Object.keys(t).forEach(function(e){return u.push(new i(t[e],e,r).filterItem(n))}),u="OR"===e?!!~u.indexOf(!0):"NOR"===e?!~u.indexOf(!0):!~u.indexOf(!1)}function e(n,t,e){var r=!0;return r=(typeof t).match(/string|number|boolean/)?a["="](n[e],t):t instanceof Array?a.IN(n[e],t):new i(t,"AND",e).filterItem(n)}function r(n,r,i,u){return i in a?a[i](n[u],r):"AND"===i||"NOR"===i||"OR"===i?t(n,r,i,u):e(n,r,i)}function i(n){var t=void 0===arguments[1]?"AND":arguments[1],e=void 0===arguments[2]?null:arguments[2];l[t]&&(t=l[t]),this.filterItem=function(i){if("string"==typeof i)try{i=JSON.parse(i)}catch(u){return!1}return r(i,n,t,e)}}function u(n){if("string"==typeof n&&(n=JSON.parse(n)),!n)throw"Invalid clause";var t=new i(n),e=function(n){return t.filterItem(n)};return e.filter=t.filterCollection,e.filterItem=t.filterItem,e}var f,o,c,a,l;return n("default",u),{setters:[],execute:function(){f=/(^|[^%])%(?!%)/g,o=/(^|[^\\])(_+)/g,c=function(n,t,e){return t+new Array(e.length+1).join(".")},a={">":function(n,t){return n>t},">=":function(n,t){return n>=t},"<":function(n,t){return t>n},"<=":function(n,t){return t>=n},"=":function(n,t){return n===t},"!=":function(n,t){return n!==t},REGEX:function(n,t){return"string"==typeof t&&!function(){var n=void 0,e=void 0;t.replace(/^\/([\s\S]*)\/([igm])?/,function(t,r,i){e=r,n=i}),e||(e=t),t=n?new RegExp(e,n):new RegExp(e)}(),!!n.match(t)},LIKE:function(n,t){var e=new RegExp("^"+t.replace(f,"$1.*").replace(o,c)+"$");return!(!n&&0!==n||!n.toString().match(e))},UNLIKE:function(n,t){return!a.LIKE(n,t)},IN:function(n,t){return!!~t.indexOf(n)},NOTIN:function(n,t){return!~t.indexOf(n)}},l={$gt:">",$gte:">=",$lt:"<",$lte:"<=",$or:"OR","||":"OR",$nor:"NOR",$and:"AND","&&":"AND",$e:"=",$eq:"=","<>":"!=",$ne:"!=","!e":"!=",$in:"IN","!in":"NOTIN",$nin:"NOTIN","NOT IN":"NOTIN",$regex:"REGEX",$like:"LIKE",$nlike:"UNLIKE","!like":"UNLIKE","NOT LIKE":"UNLIKE"},i.prototype.filterCollection=function(n){return n?n.filter(this.filterItem):[]},u.comparators=a}}});
=======
/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.1*/
System.register([],function(n){"use strict";function r(n,r,t,u){var i=Array.isArray(r)?r[y[t]](function(r,t){return e(r,t,u)(n)}):Object.keys(r)[y[t]](function(t){return e(r[t],t,u)(n)});return"$nor"===t?!i:i}function t(n,r,t){return g(r)?l.$eq(n[t],r):Array.isArray(r)?l.$in(n[t],r):e(r,"$and",t)(n)}function e(n,e,u){var i=void 0===arguments[1]?"$and":arguments[1];return function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(o){return!1}return i=p[i]||i,i in y?r(e,n,i,u):i in l?l[i](e[u],n):t(e,n,i)}}function u(n){if("string"==typeof n&&(n=JSON.parse(n)),!n||g(n))throw new TypeError("Invalid query");var r=e(n);return r.filter=function(n){return n&&n.filter?n.filter(r):[]},r}var i,o,f,c,a,$,s,g,l,y,p;return n("default",u),{setters:[],execute:function(){i=/(^|[^%])%(?!%)/g,o=/(^|[^\\])(_+)/g,f=function(n,r,t){return r+new Array(t.length+1).join(".")},c=function(n){return new RegExp("^"+n.replace(i,"$1.*").replace(o,f)+"$")},a=/^\/([\s\S]*)\/([igm]*)$/,$=function(n){return"string"==typeof n&&!function(){var r=void 0;n.replace(a,function(t,e,u){n=e,r=u}),n=r?new RegExp(n,r):new RegExp(n)}(),n},s=/^(string|number|boolean)$/,g=function(n){return null==n||s.test(typeof n)},l={$gt:function(n,r){return n>r},$gte:function(n,r){return n>=r},$lt:function(n,r){return r>n},$lte:function(n,r){return r>=n},$eq:function(n,r){return n===r},$neq:function(n,r){return n!==r},$regex:function(n,r){return $(r).test(n)},$like:function(n,r){return c(r).test(n)},$nlike:function(n,r){return!c(r).test(n)},$in:function(n,r){return!!~r.indexOf(n)},$nin:function(n,r){return!~r.indexOf(n)}},y={$or:"some",$nor:"some",$and:"every"},p={$e:"$eq",$ne:"$neq"},u.alias=p,u.comparators=l}}});
>>>>>>> only keep mongo notation for comparators & logical operators + various improvements
